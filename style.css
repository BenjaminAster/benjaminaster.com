
:root {
	color-scheme: dark;
	font-family: system-ui, sans-serif;
	overflow-wrap: break-word;
	line-height: 1.5;

	-webkit-text-size-adjust: none;
	text-size-adjust: none;
	-webkit-tap-highlight-color: transparent;

	--transparent-background: #1119;
	--shadow-color: #000a;

	--scrollbar-start-color: tomato;
	--scrollbar-end-color: orange;

	--safe-area-inset-left: env(safe-area-inset-left, 0px);
	--safe-area-inset-right: env(safe-area-inset-right, 0px);
	--safe-area-inset-top: env(safe-area-inset-top, 0px);
	--safe-area-inset-bottom: env(safe-area-inset-bottom, 0px);

	--twitter-icon: url("./assets/twitter.svg");
	--github-icon: url("./assets/github.svg");
	--codepen-icon: url("./assets/codepen.svg");
	--email-icon: url("./assets/envelope.svg");

	/* --noise-mask: see bottom of file (https://github.com/microsoft/vscode/issues/169873) */

	--gradient-color-0: tomato;
	--gradient-color-1: yellow;
	--gradient-color-2: lime;
	--gradient-color-3: cyan;
	--gradient-color-4: dodgerBlue;
	--gradient-color-5: magenta;

	color: white;
	overflow: hidden;
	block-size: 100%;

	--background-color: royalblue;
	background-color: var(--background-color);
}

@supports not selector(::-webkit-scrollbar) {
	@media (hover) {
		:root {
			scrollbar-color: var(--scrollbar-start-color) transparent;
		}
	}
}

@media (prefers-contrast: more) {
	:root {
		--transparent-background: #000b;
	}
}

:root.loading {
	--circle: radial-gradient(circle at 100px 100px, white 0 70px, transparent 71px);
	animation: 2s linear infinite move-circles;
	background:
		var(--circle) 0 0 / 200px 400px repeat,
		var(--circle) 0 200px / 200px 400px repeat;
	background-color: var(--background-color);
}

@keyframes move-circles {
	from {
		background-position-x: 0px, 200px;
	}
	to {
		background-position-x: 200px, 0px;
	}
}

body {
	margin: 0;
	box-sizing: border-box;
	overflow: auto;
	block-size: 100%;
}

img#background-image {
	display: block;
	position: fixed;
	inset: 0 0 auto;
	inline-size: 100%;
	block-size: 100vh;
	block-size: 100lvb;
	object-fit: cover;
	object-position: 75% 30%;
	z-index: -1;
}

main {
	--padding-block: 1rem;
	padding-top: max(var(--safe-area-inset-top), var(--padding-block));
	padding-right: var(--safe-area-inset-right);
	padding-bottom: max(var(--safe-area-inset-bottom), var(--padding-block));
	padding-left: var(--safe-area-inset-left);
	display: flex;
	flex-direction: column;
	gap: 2rem;
}

:root.translated-rtl {
	direction: rtl;
}

:where(p, h1, h2, h3, h4, h5, h6) {
	margin-block: 0;
}

:where(h1, h2, h3, h4, h5, h6) {
	font-weight: 600;
}

button, a {
	all: unset;
	outline: revert;
	cursor: pointer;
}

[hidden] {
	display: none;
}

.awesome {
	--backdrop-filter: blur(1.5rem);
	-webkit-backdrop-filter: var(--backdrop-filter);
	backdrop-filter: var(--backdrop-filter);
	box-shadow: 0 .1rem 1rem var(--shadow-color);
	--border-radius: 1rem;
	border-radius: var(--border-radius);
	background-color: var(--transparent-background);
	position: relative;
}

.awesome::before {
	content: "";
	z-index: -1;
	position: absolute;
	inset: 0;
	background-color: var(--transparent-background);
	opacity: .7;
	-webkit-mask: var(--noise-mask);
	mask: var(--noise-mask);
	border-radius: inherit;
}

.awesome::after {
	content: "";
	--line-thickness: 2px;
	--radius: var(--border-radius);
	--_has-left-radius: var(--has-left-radius, 1);
	--_left-radius: calc(var(--_has-left-radius) * var(--radius));
	border: 0 solid transparent;
	border-block-end-width: 2px;
	border-end-start-radius: var(--_left-radius);
	border-end-end-radius: var(--radius);
	position: absolute;
	inset: auto 0 0;
	block-size: var(--radius);
	pointer-events: none;

	background: linear-gradient(to right, var(--gradient-start), var(--gradient-end)) border-box no-repeat;

	--mask:
		conic-gradient(
			at left var(--_left-radius) top 0,
			white 250grad,
			transparent 300grad
		) 0 0 / 100% 100% no-repeat border-box,

		conic-gradient(
			at right var(--radius) top 0,
			transparent 100grad,
			white 150grad
		) 0 0 / 100% 100% no-repeat border-box,

		linear-gradient(white, white) no-repeat padding-box,

		linear-gradient(white, white) no-repeat border-box;
	-webkit-mask: var(--mask);
	mask: var(--mask);

	-webkit-mask-composite: source-in, source-in, source-out, source-over;
	mask-composite: intersect, intersect, subtract, add;
}

.about-me {
	display: grid;
	grid-template: auto auto / 1fr auto;
	grid-template-areas: "icon heading" "icon text";
	gap: .3rem 1rem;
	inline-size: fit-content;
	padding: 1rem;
	align-items: center;
	margin-inline: 1rem;

	--gradient-start: var(--gradient-color-5);
	--gradient-end: var(--gradient-color-0);
}

.about-me > img {
	grid-area: icon;
	inline-size: 4rem;
	aspect-ratio: 1;
}

.about-me > h1 {
	grid-area: heading;
}

.about-me > p {
	grid-area: text;
}

#browser-warning {
	display: block;
	padding: .2rem .8rem .5rem;
	border: 2px solid orange;
	border-radius: .8rem;
	background-color: black;
	margin-inline: 1rem;
	inline-size: fit-content;
}

#browser-warning::first-letter {
	color: orange;
	font-size: 2em;
	display: block;
}

.contact {
	font-style: normal;
	padding-inline: 1rem;
}

.contact ul {
	margin: 0;
	padding: 0;
	display: flex;
	flex-wrap: wrap;
	gap: 1rem;
	list-style: none;
}

.contact ul li {
	display: flex;
	align-items: center;
	transition: translate 70ms;
}

.contact ul li:hover {
	translate: 0 -3px;
}

.contact ul li > :is(a, button):first-child {
	display: flex;
	gap: .5rem;
	align-items: center;
	padding: .8rem 1rem;
	text-decoration: none;
	border-radius: inherit;
}

.contact ul li > :is(a, button):first-child::before {
	content: "";
	--mask: var(--mask-image) center / contain no-repeat;
	-webkit-mask: var(--mask);
	mask: var(--mask);
	display: inline-block;
	block-size: 1.3rem;
	aspect-ratio: 1;
	background-color: currentColor;
}

.contact ul li > .email ~ a {
	margin-inline-end: .8rem;
}

.contact ul li .twitter::before {
	--mask-image: var(--twitter-icon);
}

.contact ul li .github::before {
	--mask-image: var(--github-icon);
}

.contact ul li .codepen::before {
	--mask-image: var(--codepen-icon);
}

.contact ul li .email::before {
	--mask-image: var(--email-icon);
}

.projects {
	display: flex;
	flex-direction: column;
	gap: 1rem;
	box-sizing: border-box;
	position: relative;

	--gradient-start: var(--gradient-color-4);
	--gradient-end: var(--gradient-color-5);
}

.projects h2 {
	--padding-inline: .8rem;
	--has-left-radius: 0;
	padding: .5rem var(--padding-inline);
	padding-left: calc(var(--padding-inline) + var(--safe-area-inset-left));
	inline-size: fit-content;
	border-start-start-radius: 0;
	border-end-start-radius: 0;
	translate: calc(var(--safe-area-inset-left) * -1) 0;
}

.projects ul {
	margin: 0;
	padding-inline: 1rem;
	list-style: none;
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(15rem, 1fr));
	grid-template-rows: masonry;
	gap: 1.5rem;
}

@media (hover) {
	.projects ul li:hover {
		translate: 0 -.5rem;
	}

	@media (prefers-reduced-motion: no-preference) {
		.projects ul li {
			transition: translate .5s;
		}

		.projects ul li:hover {
			transition-duration: .1s;
		}
	}
}

.projects ul li > .container {
	block-size: 100%;
}

.projects ul li a.repository {
	position: absolute;
	display: grid;
	place-content: center;
	inline-size: 3rem;
	aspect-ratio: 1;
	margin: .8rem;
	inset-inline-end: 0;
	inset-block-start: 0;
	border-radius: .6rem;
	transition: background-color .15s;
}

.projects ul li a.repository:hover {
	background-color: var(--transparent-background);
}

.projects ul li a.repository::before {
	content: "";
	--mask: var(--github-icon) center / contain no-repeat;
	-webkit-mask: var(--mask);
	mask: var(--mask);
	display: block;
	block-size: 1.7rem;
	aspect-ratio: 1;
	background-color: currentColor;
}

.projects ul li a.project-link {
	display: flex;
	flex-direction: column;
	gap: .4rem;
	padding: .8rem;
	block-size: 100%;
	box-sizing: border-box;
	border-radius: inherit;
	text-decoration: none;
	position: relative;
}

@supports (background-clip: text) or (-webkit-background-clip: text) {
	.projects ul li a.project-link {
		background: linear-gradient(to right, var(--gradient-start), var(--gradient-end));
		-webkit-background-clip: text;
		background-clip: text;
		color: #fffb;
	}
}

@media (prefers-contrast: more) {
	.projects ul li a.project-link {
		background: none;
		color: white;
	}
}

:is(.projects, .contact) ul li:nth-of-type(6n + 1) {
	--gradient-start: var(--gradient-color-0);
	--gradient-end: var(--gradient-color-1);
}

:is(.projects, .contact) ul li:nth-of-type(6n + 2) {
	--gradient-start: var(--gradient-color-1);
	--gradient-end: var(--gradient-color-2);
}

:is(.projects, .contact) ul li:nth-of-type(6n + 3) {
	--gradient-start: var(--gradient-color-2);
	--gradient-end: var(--gradient-color-3);
}

:is(.projects, .contact) ul li:nth-of-type(6n + 4) {
	--gradient-start: var(--gradient-color-3);
	--gradient-end: var(--gradient-color-4);
}

:is(.projects, .contact) ul li:nth-of-type(6n + 5) {
	--gradient-start: var(--gradient-color-4);
	--gradient-end: var(--gradient-color-5);
}

:is(.projects, .contact) ul li:nth-of-type(6n + 6) {
	--gradient-start: var(--gradient-color-5);
	--gradient-end: var(--gradient-color-0);
}

.projects ul li a p {
	flex-grow: 1;
}

.projects ul li a img {
	width: 100%;
	aspect-ratio: 2 / 1;
	border-radius: .3rem;
	object-fit: contain;
}

::selection {
	background-color: var(--scrollbar-start-color);
	color: white;
}

::-webkit-scrollbar {
	inline-size: 11px;
}

::-webkit-scrollbar-thumb {
	background-image: linear-gradient(
		to bottom,
		var(--scrollbar-start-color),
		var(--scrollbar-end-color)
	);
}

::-webkit-scrollbar-button:start {
	background-color: var(--scrollbar-start-color);
}

::-webkit-scrollbar-button:end {
	background-color: var(--scrollbar-end-color);
}

::-webkit-scrollbar-button, ::-webkit-scrollbar-thumb {
	block-size: 11px;
	border: 3px solid transparent;
	border-radius: 6px;
	background-clip: padding-box;
}

@media (hover: none) {
	:root, body {
		overflow: unset;
	}
}

@supports (aspect-ratio: 1) {
	#browser-warning {
		display: none;
	}
}

:root {
	--noise-mask: url('data:image/svg+xml, \
		<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100"> \
			<filter id="noise" x="0%" y="0%" width="100%" height="100%"> \
				<feTurbulence type="fractalNoise" baseFrequency="1.3" /> \
			</filter> \
			<rect x="0%" y="0%" width="100%" height="100%" filter="url(%23noise)" /> \
		</svg> \
	');
}
